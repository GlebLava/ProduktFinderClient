<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">


    <SolidColorBrush x:Key="ChildwindowBackGroundColor" Color="#272730"/>

    <SolidColorBrush x:Key="AllBackGroundColor" Color="#32323d"/>
    <SolidColorBrush x:Key="MainBackGroundColor" Color="#1f1f26"/>
    <SolidColorBrush x:Key="WindowChromeColor" Color="#171717"/>
    
    <SolidColorBrush x:Key="WindowChromeFunctionalColor" Color="#171717"/>
    
    
    

    <SolidColorBrush x:Key="ToolbarForeGroundColor" Color="#d5dbde"/>
    <SolidColorBrush x:Key="ToolbarBackGroundColor" Color="#414147"/>

    <SolidColorBrush x:Key="HighlightColor" Color="#73c1f4"/>
    <SolidColorBrush x:Key="NotEnabledBackGroundColor" Color="#262629"/>
    <SolidColorBrush x:Key="NotEnabledForeGroundColor" Color="#808587"/>

    <SolidColorBrush x:Key="ButtonHoverBackgroundColor" Color="#5b5a61"/>
    <SolidColorBrush x:Key="ButtonHoverForegroundColor" Color="#fbfbfe"/>

    <Style TargetType="Border">
        <Setter Property="Background" Value="{StaticResource AllBackGroundColor}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ToolbarForeGroundColor}"/>
    </Style>

    <Style TargetType="Button" x:Key="WindowChromeButton">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="#9aa0a3"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" 
                                BorderBrush="Black"
                                BorderThickness="0"
                                CornerRadius="10">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#4e4d53"/>
                <Setter Property="Foreground" Value="#fbfbfe"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Button" x:Key="ToolbarButton">
        <Setter Property="Background" Value="{StaticResource ToolbarBackGroundColor}"/>
        <Setter Property="Foreground" Value="{StaticResource ToolbarForeGroundColor}"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="15">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource ButtonHoverBackgroundColor}"/>
                <Setter Property="Foreground" Value="{StaticResource ButtonHoverForegroundColor}"/>
            </Trigger>

            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{StaticResource NotEnabledBackGroundColor}"/>
                <Setter Property="Foreground" Value="{StaticResource NotEnabledForeGroundColor}"/>
            </Trigger>

        </Style.Triggers>
    </Style>

    <Style TargetType="Button" x:Key="ToolbarButtonNotRound">
        <Setter Property="Background" Value="{StaticResource ToolbarBackGroundColor}"/>
        <Setter Property="Foreground" Value="{StaticResource ToolbarForeGroundColor}"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource ButtonHoverBackgroundColor}"/>
                <Setter Property="Foreground" Value="{StaticResource ButtonHoverForegroundColor}"/>
            </Trigger>

            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{StaticResource NotEnabledBackGroundColor}"/>
                <Setter Property="Foreground" Value="{StaticResource NotEnabledForeGroundColor}"/>
            </Trigger>

        </Style.Triggers>
    </Style>

    <Style TargetType="Button" x:Key="WindowChromeFunctionalButton">
        <Setter Property="Background" Value="{StaticResource WindowChromeFunctionalColor}"/>
        <Setter Property="Foreground" Value="{StaticResource ToolbarForeGroundColor}"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource ButtonHoverBackgroundColor}"/>
                <Setter Property="Foreground" Value="{StaticResource ButtonHoverForegroundColor}"/>
            </Trigger>

            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{StaticResource NotEnabledBackGroundColor}"/>
                <Setter Property="Foreground" Value="{StaticResource NotEnabledForeGroundColor}"/>
            </Trigger>

        </Style.Triggers>
    </Style>


    <Style TargetType="TextBlock" x:Key="ToolbarTextBlock">
        <Setter Property="Background" Value="{StaticResource ToolbarBackGroundColor}"/>
        <Setter Property="Foreground" Value="{StaticResource ToolbarForeGroundColor}"/>
        <Setter Property="Padding" Value="5"/>
    </Style>

    <Style TargetType="Border" x:Key="Roundborder">
        <Setter Property="Background" Value="{StaticResource ToolbarBackGroundColor}"/>
        <Setter Property="CornerRadius" Value="10"/>
        <Setter Property="BorderBrush" Value="{StaticResource ToolbarBackGroundColor}"/>
    </Style>

    <Style TargetType="TextBox" x:Key="ToolbarTextBox">
        <Setter Property="Background" Value="{StaticResource ToolbarBackGroundColor}"/>
        <Setter Property="Foreground" Value="{StaticResource ToolbarForeGroundColor}"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="border" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                Background="{TemplateBinding Background}" 
                                SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="PART_ContentHost" 
                                      Focusable="false" 
                                      HorizontalScrollBarVisibility="Hidden" 
                                      VerticalScrollBarVisibility="Hidden"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="Transparent"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource HighlightColor}"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="false">
                            <Setter Property="BorderBrush" TargetName="border" Value="Transparent"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Resources>
            <Style TargetType="Border">
                <Setter Property="CornerRadius" Value="0"/>
                <Setter Property="BorderThickness" Value="0"/>
            </Style>
        </Style.Resources>

    </Style>

    <Style TargetType="ListView">
        <Setter Property="Background" Value="{StaticResource MainBackGroundColor}"/>
    </Style>

    <Style TargetType="{x:Type CheckBox}" x:Key="ToolBarCheckBox">
        <Setter Property="Background" Value="{StaticResource ToolbarBackGroundColor}" />
        <Setter Property="BorderBrush" Value="{StaticResource ToolbarForeGroundColor}"/>
        <Setter Property="Foreground" Value="{StaticResource ToolbarForeGroundColor}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch" >
                        <Border BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" Width="15" Height="15">
                            <!-- your color here -->
                            <Path Stretch="Uniform" Width="15" Height="10" Fill="{StaticResource ToolbarForeGroundColor}" Name="eliCheck" Data="F1 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z " Visibility="Collapsed"/>
                        </Border>
                        <TextBlock Margin="5,0,0,0"  VerticalAlignment="Center" Foreground="{TemplateBinding Foreground}" Text="{TemplateBinding Content}"></TextBlock>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#1b1b1c" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="#FF9C9E9F" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="LightGray" />
                            <Setter Property="Foreground" Value="Gray" />
                            <Setter Property="BorderBrush" Value="Gray"/>
                            <Setter TargetName="eliCheck" Property="Opacity" Value="0.5" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="eliCheck" Property="Visibility" Value="Visible"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type CheckBox}" x:Key="ToolBarCheckBoxLeftWithContentPresenter">
        <Setter Property="Background" Value="{StaticResource ToolbarBackGroundColor}" />
        <Setter Property="BorderBrush" Value="{StaticResource ToolbarForeGroundColor}"/>
        <Setter Property="Foreground" Value="{StaticResource ToolbarForeGroundColor}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch" >
                        <Border BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" Width="15" Height="15">
                            <!-- your color here -->
                            <Path Stretch="Uniform" Width="15" Height="10" Fill="{StaticResource ToolbarForeGroundColor}" Name="eliCheck" Data="F1 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z " Visibility="Collapsed"/>
                        </Border>
                        <ContentPresenter   Margin="4,0,0,0"
                                            VerticalAlignment="Center"
                                            HorizontalAlignment="Left"
                                            RecognizesAccessKey="True"/>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#1b1b1c" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="#FF9C9E9F" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="LightGray" />
                            <Setter Property="Foreground" Value="Gray" />
                            <Setter Property="BorderBrush" Value="Gray"/>
                            <Setter TargetName="eliCheck" Property="Opacity" Value="0.5" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="eliCheck" Property="Visibility" Value="Visible"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type CheckBox}" x:Key="ToolBarCheckBoxRightWithContentPresenter">
        <Setter Property="Background" Value="{StaticResource ToolbarBackGroundColor}" />
        <Setter Property="BorderBrush" Value="{StaticResource ToolbarForeGroundColor}"/>
        <Setter Property="Foreground" Value="{StaticResource ToolbarForeGroundColor}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch" >
                        <ContentPresenter   Margin="0,0,4,0"
                                            VerticalAlignment="Center"
                                            HorizontalAlignment="Left"
                                            RecognizesAccessKey="True"/>
                        <Border BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" Width="15" Height="15">
                            <!-- your color here -->
                            <Path Stretch="Uniform" Width="15" Height="10" Fill="{StaticResource ToolbarForeGroundColor}" Name="eliCheck" Data="F1 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z " Visibility="Collapsed"/>
                        </Border>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#1b1b1c" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="#FF9C9E9F" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="LightGray" />
                            <Setter Property="Foreground" Value="Gray" />
                            <Setter Property="BorderBrush" Value="Gray"/>
                            <Setter TargetName="eliCheck" Property="Opacity" Value="0.5" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="eliCheck" Property="Visibility" Value="Visible"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type RadioButton}" x:Key="DefaultRadioButton">
        <Setter Property="Foreground" Value="{StaticResource ToolbarForeGroundColor}"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <Style TargetType="{x:Type Label}" x:Key="DefaultLabel">
        <Setter Property="Foreground" Value="{StaticResource ToolbarForeGroundColor}"/>
    </Style>


</ResourceDictionary>